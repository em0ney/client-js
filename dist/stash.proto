syntax = "proto3";

package stash;

service Documents {
  rpc put (PutRequest) returns (PutReply) {}
  rpc get (GetRequest) returns (GetReply) {}
  rpc query (QueryRequest) returns (QueryReply) {}
}

service Control {
  rpc Healthcheck (HealthCheck) returns (HealthResponse) {}
}

message RequestContext {
  string authToken = 1;
  // TODO: Later we could allow clients to send a key (and wrapped key)
  // to allow CS to encrypt meta data to be returned to the caller (e.g. request time, facets etc)
  // The response would include the encrypted data and the wrapped data key (similar to how KMS does envelope encryption)
}

message PutRequest {
  bytes collectionId = 1;
  bytes id = 2;
  bytes value = 3;
  bytes posting = 4;
  repeated bytes terms = 5;

  RequestContext context = 100;
}

message PutReply {
}

message GetRequest {
  bytes collectionId = 1;
  bytes id = 2;

  RequestContext context = 100;
}

message GetReply {
  bytes value = 1;
}

message QueryRequest {
  bytes collectionId = 1;
  repeated bytes terms = 2; // TODO: Perhaps terms, pairs and ordering should properly defined in the protobuf
  uint32 limit = 3;

  RequestContext context = 100;
}

message QueryReply {
  repeated bytes result = 1;
}

message HealthCheck {}
message HealthResponse {}
